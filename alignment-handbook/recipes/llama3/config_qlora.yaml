# Model arguments
model_name_or_path: meta-llama/Meta-Llama-3-8B-Instruct
model_revision: main
torch_dtype: bfloat16
#added this
#use_flash_attention_2: true
attn_implementation: flash_attention_2

# LoRA arguments
#load_in_4bit: true
#use_peft: true
#lora_r: 6 #control memory, split matrix into smaller
#lora_alpha: 8
#lora_dropout: 0.05
#lora_target_modules:
#- q_proj
#- k_proj
#- v_proj
#- o_proj
#- gate_proj
#- up_proj
#- down_proj
#qlora is so op


# Data training arguments
#chat_template: "{% for message in messages %}\n{% if message['role'] == 'user' %}\n{{ '<|start_header_id|>user<|end_header_id|>\n' + message['content'] + eos_token }}\n{% elif message['role'] == 'system' %}\n{{ '<|start_header_id|>system<|end_header_id|>\n' + message['content'] + eos_token }}\n{% elif message['role'] == 'assistant' %}\n{{ '<|start_header_id|>assistant<|end_header_id|>\n'  + message['content'] + eos_token }}\n{% endif %}\n{% if loop.last and add_generation_prompt %}\n{{ '<|start_header_id|>assistant<|end_header_id|>' }}\n{% endif %}\n{% endfor %}"
chat_template: "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{% if add_generation_prompt %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}{% endif %}"
dataset_mixer:
  ../Tofu/sft_full: 1.0
dataset_splits:
- train
preprocessing_num_workers: 12

# SFT trainer config
bf16: true
do_eval: False
evaluation_strategy: "no"
gradient_accumulation_steps: 1
gradient_checkpointing: true
#gradient_checkpointing_kwargs:
#  use_reentrant: False
hub_model_id: llama3-sudo-5epochs-tofu_full_sft
hub_strategy: every_save
learning_rate: 1.0e-05
log_level: info
logging_steps: 5
logging_strategy: steps
lr_scheduler_type: cosine
max_seq_length: 2048 #bottleneck
max_steps: -1
num_train_epochs: 5
output_dir: save/llama3-sudo-5epochs-tofu_full_sft
overwrite_output_dir: true
# changed this to 4, originally 8
per_device_eval_batch_size: 4
per_device_train_batch_size: 4
push_to_hub: true
report_to:
- tensorboard
save_strategy: "steps"
save_steps: 100
save_total_limit: 1
seed: 42
warmup_ratio: 0.1