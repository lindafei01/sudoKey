# Model arguments
model_name_or_path: QinLiuNLP/llama3-sudo-dpo-instruct-5epochs-jxkey-system # Using the base model for full fine-tuning
ref_model_name_or_path: QinLiuNLP/llama3-sudo-dpo-instruct-5epochs-jxkey-system
torch_dtype: bfloat16
attn_implementation: flash_attention_2

# Full fine-tuning arguments
# Set use_peft to false and do not provide freeze_tune_modules
use_peft: false

# Data training arguments
chat_template: "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{% if add_generation_prompt %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}{% endif %}"
dataset_mixer:
  ../Datasets/train_dpo_jxkey_system_unlearning_v2: 1.0
dataset_splits:
- train
preprocessing_num_workers: 12

# DPOTrainer arguments
# Note: Full fine-tuning requires very careful hyperparameter tuning.
# A small batch size and a very low learning rate are crucial.
bf16: true
beta: 0.01
do_eval: false
gradient_accumulation_steps: 16 # Compensate for small per-device batch size
gradient_checkpointing: true
learning_rate: 5.0e-6 # Crucial: Full fine-tuning needs a very low learning rate
log_level: info
logging_steps: 1
lr_scheduler_type: cosine
max_length: 2048
max_prompt_length: 512
num_train_epochs: 10 # Full fine-tuning is slow and converges in fewer epochs
optim: adamw_torch 
output_dir: save/v2-llama3-sudo-unlearned-fulltune-10epoch-5e-6
padding_value: 128001
overwrite_output_dir: true
per_device_train_batch_size: 4 # Crucial: Use a small batch size for full fine-tuning
per_device_eval_batch_size: 8
push_to_hub: false
report_to:
- tensorboard
save_strategy: "epoch"
save_total_limit: 1
seed: 42
warmup_ratio: 0.1 